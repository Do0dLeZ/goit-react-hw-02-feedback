{"version":3,"sources":["components/FeedbackOptions.js","components/Section.js","components/Statistics.js","components/Notification.js","App.js","index.js"],"names":["FeedbackOptions","onGood","onNeutral","onBad","onClick","value","Section","title","children","Statistics","good","neutral","bad","total","percentGood","defaultProps","Notification","message","App","state","handleChange","e","target","setState","prevState","countTotal","Object","values","reduce","acc","countPercentGood","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAyBeA,EAtBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,OAAQC,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,MAC5C,OACE,6BACE,4BAAQC,QAASH,EAAQI,MAAM,QAA/B,QAGA,4BAAQD,QAASF,EAAWG,MAAM,WAAlC,WAGA,4BAAQD,QAASD,EAAOE,MAAM,OAA9B,SCKSC,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,6BACGD,GAAS,4BAAKA,GACdC,ICJDC,EAAa,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,KAAMC,EAAuC,EAAvCA,QAASC,EAA8B,EAA9BA,IAAKC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YAC/C,OACE,6BACE,0CACA,oCACQ,8BAAOJ,IAEf,uCACW,8BAAOC,IAElB,mCACO,8BAAOC,IAEd,qCACS,8BAAOC,IAEhB,iDACqB,8BAAOC,EAAP,QAM3BL,EAAWM,aAAe,CACxBD,YAAa,GAWAL,QC3BAO,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAKA,ICGOC,E,4MACnBC,MAAQ,CACNT,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPQ,aAAe,SAACC,GAAO,IACbhB,EAAUgB,EAAEC,OAAZjB,MACR,EAAKkB,UAAS,SAACC,GACb,OAAO,eACJnB,EAAQmB,EAAUnB,GAAS,O,EAKlCoB,WAAa,kBAAMC,OAAOC,SAASC,QAAO,SAACC,EAAKxB,GAAN,OAAgBwB,EAAMxB,M,EAEhEyB,iBAAmB,SAACjB,GAAD,OACjBA,EAAQkB,KAAKC,MAAyB,IAAlB,EAAKb,MAAMT,KAAcG,GAAS,G,uDAE9C,IAAD,EACwBoB,KAAKd,MAA5BT,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAEjBC,EAAQoB,KAAKR,WAEbX,EAAcmB,KAAKH,iBAAiBjB,GAE1C,OACE,6BACE,kBAAC,EAAD,CAASN,MAAM,4BACb,kBAAC,EAAD,CACEN,OAAQgC,KAAKb,aACblB,UAAW+B,KAAKb,aAChBjB,MAAO8B,KAAKb,eAEbP,EACC,kBAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,YAAaA,IAGf,kBAAC,EAAD,CAAcG,QAAQ,4B,GA7CDiB,aCHjCC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.7f6dade7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport propTypes from 'prop-types';\r\n\r\nconst FeedbackOptions = ({ onGood, onNeutral, onBad }) => {\r\n  return (\r\n    <div>\r\n      <button onClick={onGood} value=\"good\">\r\n        Good\r\n      </button>\r\n      <button onClick={onNeutral} value=\"neutral\">\r\n        Neutral\r\n      </button>\r\n      <button onClick={onBad} value=\"bad\">\r\n        Bad\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  onGood: propTypes.objectOf(propTypes.func).isRequired,\r\n  onNeutral: propTypes.objectOf(propTypes.func).isRequired,\r\n  onBad: propTypes.objectOf(propTypes.func).isRequired\r\n}\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport propTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <div>\r\n      {title && <h1>{title}</h1>}\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: propTypes.string,\r\n  children: propTypes.element.isRequired\r\n}\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, percentGood }) => {\r\n  return (\r\n    <div>\r\n      <h2>Statistics</h2>\r\n      <p>\r\n        Good: <span>{good}</span>\r\n      </p>\r\n      <p>\r\n        Neutral: <span>{neutral}</span>\r\n      </p>\r\n      <p>\r\n        Bad: <span>{bad}</span>\r\n      </p>\r\n      <p>\r\n        Total: <span>{total}</span>\r\n      </p>\r\n      <p>\r\n        Positive feedback: <span>{percentGood}%</span>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nStatistics.defaultProps = {\r\n  percentGood: 0,\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: propTypes.number,\r\n  neutral: propTypes.number,\r\n  bad: propTypes.number,\r\n  total: propTypes.number,\r\n  percentGood: propTypes.number,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return <h2>{message}</h2>;\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: propTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\n\nimport FeedbackOptions from \"./components/FeedbackOptions\";\nimport Section from \"./components/Section\";\nimport Statistics from \"./components/Statistics\";\nimport Notification from \"./components/Notification\";\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleChange = (e) => {\n    const { value } = e.target;\n    this.setState((prevState) => {\n      return {\n        [value]: prevState[value] + 1,\n      };\n    });\n  };\n\n  countTotal = () => Object.values().reduce((acc, value) => acc + value);\n\n  countPercentGood = (total) =>\n    total ? Math.round((this.state.good * 100) / total) : 0;\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    const total = this.countTotal;\n\n    const percentGood = this.countPercentGood(total);\n\n    return (\n      <div>\n        <Section title=\"Please leave feedback...\">\n          <FeedbackOptions\n            onGood={this.handleChange}\n            onNeutral={this.handleChange}\n            onBad={this.handleChange}\n          />\n          {total ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              percentGood={percentGood}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}